#  If 'strict' is True, then the Java Toolkit will reject unsigned
#  or unencrypted messages if it expects them signed or encrypted
#  Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict =  true

# Enable debug mode (to print errors)
onelogin.saml2.debug =  false


#  Service Provider Data that we are deploying
#

#  Identifier of the SP entity  (must be a URI)
#onelogin.saml2.sp.entityid = http://localhost:8080/java-saml-tookit-jspsample/metadata.jsp
#onelogin.saml2.sp.entityid = FaaatWebdev
onelogin.saml2.sp.entityid = Fars
#onelogin.saml2.sp.entityid = FarsDR


# Specifies info about where and how the <AuthnResponse> message MUST be
#  returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned
#onelogin.saml2.sp.assertion_consumer_service.url = http://faaatdev.inbcu.com/FAWebApp/
onelogin.saml2.sp.assertion_consumer_service.url = https://fars-stg.inbcu.com/FAWebApp/
#onelogin.saml2.sp.assertion_consumer_service.url = https://fars.inbcu.com/FAWebApp/
#onelogin.saml2.sp.assertion_consumer_service.url = https://fars-dr.inbcu.com/FAWebApp/






# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be
# returned to the requester, in this case our SP.
#onelogin.saml2.sp.single_logout_service.url = http://faaatdev.inbcu.com/FAWebApp/sls
onelogin.saml2.sp.single_logout_service.url = https://fars-stg.inbcu.com/FAWebApp/sls
#onelogin.saml2.sp.single_logout_service.url = https://fars.inbcu.com/FAWebApp/sls
#onelogin.saml2.sp.single_logout_service.url = https://fars-dr.inbcu.com/FAWebApp/sls

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to
# represent the requested subject.
# Take a look on lib/Saml2/Constants.php to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters

#onelogin.saml2.sp.x509cert =

# Requires Format PKCS#8   BEGIN PRIVATE KEY
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
#onelogin.saml2.sp.privatekey =

# Identity Provider Data that we want connect with our SP
#

# Identifier of the IdP entity  (must be a URI)
onelogin.saml2.idp.entityid = nbcufssstg
#onelogin.saml2.idp.entityid = nbcufssprd
#onelogin.saml2.idp.entityid = nbcufssprd


# SSO endpoint info of the IdP. (Authentication Request protocol)
# URL Target of the IdP where the SP will send the Authentication Request Message
onelogin.saml2.idp.single_sign_on_service.url = https://fss.stg.inbcu.com/fss/idp/SSO.saml2
#onelogin.saml2.idp.single_sign_on_service.url = https://fss.inbcu.com/fss/idp/SSO.saml2
#onelogin.saml2.idp.single_sign_on_service.url = https://fss.inbcu.com/fss/idp/SSO.saml2


# SAML protocol binding to be used to deliver the <AuthnRequest> message
# to the IdP.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_sign_on_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# SLO endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Request
onelogin.saml2.idp.single_logout_service.url = https://login.stg.inbcu.com/login/logoff.jsp
#onelogin.saml2.idp.single_logout_service.url = https://login.inbcu.com/login/logoff.jsp
#onelogin.saml2.idp.single_logout_service.url = https://login.inbcu.com/login/logoff.jsp


# Optional SLO Response endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Response. If left blank, same URL as onelogin.saml2.idp.single_logout_service.url will be used.
# Some IdPs use a separate URL for sending a logout request and response, use this property to set the separate response url
onelogin.saml2.idp.single_logout_service.response.url =
# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Public x509 certificate of the IdP
#onelogin.saml2.idp.x509cert = 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

# Production cert
#onelogin.saml2.idp.x509cert = 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
#Latest Certificate Prod

#onelogin.saml2.idp.x509cert = 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
#Latest Certificate dev and Stgae
#onelogin.saml2.idp.x509cert = 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
#Latest Certificate for dev and stage updated on 26thFeb2024
onelogin.saml2.idp.x509cert = MIIDNDCCAhygAwIBAgIGAY1gZL67MA0GCSqGSIb3DQEBCwUAMFsxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJOWTEMMAoGA1UEChMDSUFNMRUwEwYDVQQLEwxOQkNVbml2ZXJzYWwxGjAYBgNVBAMTEWZzcy5zdGcuaW5iY3UuY29tMB4XDTI0MDEzMTE2NDAzMVoXDTI3MDEzMDE2NDAzMVowWzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAk5ZMQwwCgYDVQQKEwNJQU0xFTATBgNVBAsTDE5CQ1VuaXZlcnNhbDEaMBgGA1UEAxMRZnNzLnN0Zy5pbmJjdS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQChjWjGJce4WZKQ95ZJwXnSmRaxJnzC52YCQquHx7jaiB9mqtN2ZqZ7pYg9YgRqrT0YCteqfA3VL8+vgxMbiQI7nehNcX9Zr1/cV1boF6Fou7FTxOE43a4/on4onZqQsmsjJi8rHX4foPwQkGpZB63NUMVIeVx2oOjzntjBwVT0ASPHwMXkd1HhW2aJH2lRb40P8ZbfGwdoIu2VZtBYoddWMKkC1cKV8VHgvLEH+wJVmAtUbNLWqIH/7vsj5efWFip1AVHOZYvtW79yw9uZxTdUVavtsLp4XJCgiLV2jndgT0AQMzdCQjKwlrGdKdnoZRHz/HPSxJGZP4h/Lm8rIQLxAgMBAAEwDQYJKoZIhvcNAQELBQADggEBADeG3qgFsJauxFH/UCSDMXZZIyIIAejHZ96MpCE5iPynebwS4lSvDGLkNMSwyHvyq/oiAJaDO4Ep1UrvTFEWXucQl3ka5emXaUUGUNx18tRqKl8JZOTUII+a1igJxtk1tksFzX7KnexyFUcW4mcv1vhKBYcgrGIwBTWGWBvLVhtOippyH0KflEFAW1EqNYMgp2y2nG/+qXWY4BC4k//XqOg2GS2rCvxl0r26F54y1+UnFFOcT4d4puXSnI8FZGCRBa1G22bPKszueAklbQYn5Mwf7XdRrGb1og3Es1YRIANu4Q5tln8Kw84o94wbkJNJVwPCVd3Ijk4zKCmAzqQcsqE=
#certificate for DR
#onelogin.saml2.idp.x509cert = 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
# Instead of use the whole x509cert you can use a fingerprint
# (openssl x509 -noout -fingerprint -in "idp.crt" to generate it,
# or add for example the -sha256 , -sha384 or -sha512 parameter)
#
# If a fingerprint is provided, then the certFingerprintAlgorithm is required in order to
# let the toolkit know which Algorithm was used. Possible values: sha1, sha256, sha384 or sha512
# 'sha1' is the default value.
# onelogin.saml2.idp.certfingerprint =
# onelogin.saml2.idp.certfingerprint_algorithm = sha256


# Security settings
#

# Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
# will be encrypted.
onelogin.saml2.security.nameid_encrypted = false

# Indicates whether the <samlp:AuthnRequest> messages sent by this SP
# will be signed.              [The Metadata of the SP will offer this info]
onelogin.saml2.security.authnrequest_signed = false

# Indicates whether the <samlp:logoutRequest> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutrequest_signed = false

# Indicates whether the <samlp:logoutResponse> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutresponse_signed = false

# Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
# <samlp:LogoutResponse> elements received by this SP to be signed.
onelogin.saml2.security.want_messages_signed = false

# Indicates a requirement for the <saml:Assertion> elements received by this SP to be signed.
onelogin.saml2.security.want_assertions_signed = false

# Indicates a requirement for the Metadata of this SP to be signed.
# Right now supported null (in order to not sign) or true (sign using SP private key)
onelogin.saml2.security.sign_metadata =

# Indicates a requirement for the Assertions received by this SP to be encrypted
onelogin.saml2.security.want_assertions_encrypted = false

# Indicates a requirement for the NameID received by this SP to be encrypted
onelogin.saml2.security.want_nameid_encrypted = false

# Authentication context.
# Set Empty and no AuthContext will be sent in the AuthNRequest
# You can set multiple values (comma separated them)
onelogin.saml2.security.requested_authncontext = urn:oasis:names:tc:SAML:2.0:ac:classes:Password

# Allows the authn comparison parameter to be set, defaults to 'exact'
onelogin.saml2.security.onelogin.saml2.security.requested_authncontextcomparison = exact

# Allows duplicated names in the attribute statement
onelogin.saml2.security.allow_duplicated_attribute_name = false

# Indicates if the SP will validate all received xmls.
# (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
onelogin.saml2.security.want_xml_validation = true

# Algorithm that the toolkit will use on signing process. Options:
#  'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
#  'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
onelogin.saml2.security.signature_algorithm = http://www.w3.org/2001/04/xmldsig-more#rsa-sha256


# Algorithm that the toolkit will use on digest process. Options:
#  'http://www.w3.org/2000/09/xmldsig#sha1'
#  'http://www.w3.org/2001/04/xmlenc#sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#sha384'
#  'http://www.w3.org/2001/04/xmlenc#sha512'
onelogin.saml2.security.digest_algorithm = http://www.w3.org/2001/04/xmlenc#sha256

# Reject Signatures with deprecated algorithms (sha1)
onelogin.saml2.security.reject_deprecated_alg = true

# Organization
onelogin.saml2.organization.name = SP Java
onelogin.saml2.organization.displayname = SP Java Example
onelogin.saml2.organization.url = http://sp.example.com
onelogin.saml2.organization.lang =

# Contacts
onelogin.saml2.contacts.technical.given_name = Technical Guy
onelogin.saml2.contacts.technical.email_address = technical@example.com
onelogin.saml2.contacts.support.given_name = Support Guy
onelogin.saml2.contacts.support.email_address = support@@example.com
